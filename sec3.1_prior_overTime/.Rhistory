file.path
file.path("ouput")
list.files
getwd()
setwd("../")
getwd()
file.path("ouput")
####################
## create figures and output directory if missing
dir.create(file.path("ouput"), recursive = TRUE, showWarnings = FALSE)
####################
## create figures and output directory if missing
dir.create(file.path("output"), recursive = TRUE, showWarnings = FALSE)
q()
source("2_CP_priorPlots.R")
source("2_LSP_priorPlots.R")
source("2_iCRP_priorPlots.R
")"
")
source("2_iCRP_priorPlots.R")
install.packages("salso")
install.packages("salso")
R.home()
getwd()
setwd("../sec3.1_prior_overTime/")
source("runSimulations.R")
source("runSimulations.R")
source("runSimulations.R")
samples_diffAlpha_constantOverTime <- readRDS("~/github/informedPartitions/sec3.1_prior_overTime/results/samples_diffAlpha_constantOverTime.rds")
rm(list =ls())
### Plots results from simulations from temporal partition process ###
### Pairwise distance between partitions ####
library(MixSim)
### Plots results from simulations from temporal partition process ###
### Pairwise distance between partitions ####
library(MixSim)
library(fields)
library(ggplot2)
library(ggridges)
library(cowplot)
library(dplyr)
theme_set(theme_minimal())
############################
## read results
############################
res <- readRDS("results/samples_diffAlpha_constantOverTime.rds")
outDir <- paste0("figures/", res$name, "/")
dir.create(file.path(outDir), recursive = TRUE, showWarnings = FALSE)
str(res)
help()
help("Reduce")
### Plots results from simulations from temporal partition process ###
### Pairwise distance between partitions ####
# library(MixSim)
# library(fields)
library(ggplot2)
library(ggridges)
library(cowplot)
library(dplyr)
theme_set(theme_minimal())
############################
## read results
############################
res <- readRDS("results/samples_diffAlpha_constantOverTime.rds")
outDir <- paste0("figures/", res$name, "/")
dir.create(file.path(outDir), recursive = TRUE, showWarnings = FALSE)
str(res)
nsim <- length(res$ARIout)
ARIoutMat <- Reduce('+', res$ARIout)/nsim
VIoutMat <- Reduce('+', res$VIout)/nsim
F1outMat <- Reduce('+', res$F1out)/nsim
dfARI <- reshape2::melt(ARIoutMat)
dfVI  <- reshape2::melt(VIoutMat)
dfF1  <- reshape2::melt(F1outMat)
ARIp <- ggplot(dfARI) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
VIp <- ggplot(dfVI) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = 1 - value), color = "white") +
scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+ ylab('') +
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p <- ggplot(dfF1) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+
ylab('')+
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p
### Plots results from simulations from temporal partition process ###
### Pairwise distance between partitions ####
# library(MixSim)
library(fields)
tim.colors
help(psm)
library(mclust)
library(mclust)
help(psm)
library(drpm)
help(psm)
??psm
help("image")
image(dfF1,
axes=FALSE, xlab="", ylab="", col = tim.colors())
image(F1outMat,
axes=FALSE, xlab="", ylab="", col = tim.colors())
tim.colors()
F1p <- ggplot(dfF1) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_colour_gradientn(tim.colors()) +
# scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#       high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+
ylab('')+
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p <- ggplot(dfF1) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_colour_gradientn(colors =tim.colors()) +
# scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#       high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+
ylab('')+
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p
F1p <- ggplot(dfF1) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_colour_gradientn(colors =tim.colors(), limits = c(0, 1)) +
# scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#       high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+
ylab('')+
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p
F1p <- ggplot(dfF1) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_colour_gradientn(colors =tim.colors(), limits = c(0, 1)) +
# scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#       high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+
ylab('')+
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p
F1p <- ggplot(dfF1) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_colour_gradientn(colors =tim.colors(), midpoint = 0.5, limits = c(0, 1)) +
# scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#       high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+
ylab('')+
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p
F1p <- ggplot(dfF1) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_colour_gradientn(colors =tim.colors(),limits = c(0, 1)) +
# scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#       high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+
ylab('')+
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p
F1p <- ggplot(dfF1) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
# scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#       high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+
ylab('')+
theme_classic(14)+
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
F1p
prow <- plot_grid(
ARIp + theme(legend.position="none") + ggtitle('ARI') ,
VIp + theme(legend.position="none") + ggtitle('1 - VI') ,
F1p + theme(legend.position="none") + ggtitle('F1') ,
align = 'vh',
hjust = -1,
nrow = 1
)
prow
legend <- get_legend(ARIp)
plot <- plot_grid(prow, legend, rel_widths = c(3, .4))
distDF <- reshape2::melt(res$VIFirstout)
distDF = distDF |>
mutate(time = factor(Var1, levels =  1:length(unique(distDF$Var1))))
distVI <- ggplot(filter(distDF, time != "1")) +
geom_density_ridges(aes(x = value, y = time),
stat = "binline", bins = 100, scale = 0.8,
draw_baseline = FALSE) +
xlim(c(0, 1)) +
xlab("variation of information") +
ggtitle("Distance from baseline partition (T = 1)")
distVI
##############
distDF <- reshape2::melt(res$F1Firstout)
distDF = distDF |>
mutate(time = factor(Var1, levels =  1:length(unique(distDF$Var1))))
distF1 <- ggplot(filter(distDF, time != "1")) +
geom_density_ridges(aes(x = 1 - value, y = time),
stat = "binline", bins = 100, scale = 0.8,
draw_baseline = FALSE) +
xlim(c(0, 1)) +
xlab("1 - F1 distance") +
ggtitle("Distance from baseline partition (T = 1)")
###################
## Pariwise allocations over time
###################
dim(res$pairWise)
pairOverTime <- apply(res$pairWise, c(1,2,3), mean)
pairMarginal <- apply(res$pairWise, c(1,2), mean)
dfMarginal  <- reshape2::melt(pairMarginal)
pairPlotM <- ggplot(dfMarginal) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Pairwise allocation probabilities\nmarginal over time") +
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
pairPlotM
## overtime
dfOverTime  <- reshape2::melt(pairOverTime)
pairPlotOT <- ggplot(dfOverTime) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
facet_wrap(.~as.factor(Var3), nrow = 2) +
scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Pairwise allocation probabilities - over time") +
theme(axis.text.x = element_blank() ,
axis.text.y = element_blank() ,
aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
pairPlotOT
## overtime
dfOverTime  <- reshape2::melt(pairOverTime)
pairPlotOT <- ggplot(dfOverTime) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
facet_wrap(.~as.factor(Var3), nrow = 2) +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
#  scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#        high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Pairwise allocation probabilities - over time") +
theme(axis.text.x = element_blank() ,
axis.text.y = element_blank() ,
aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
pairPlotOT
## overtime
dfOverTime  <- reshape2::melt(pairOverTime)
pairPlotOT <- ggplot(dfOverTime) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
facet_wrap(.~as.factor(Var3), nrow = 2) +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
#  scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#        high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Pairwise allocation probabilities - over time") +
theme(axis.text.x = element_blank() ,
axis.text.y = element_blank() ,
aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right",
axis.ticks = element_blank())
pairPlotOT
## overtime
dfOverTime  <- reshape2::melt(pairOverTime)
pairPlotOT <- ggplot(dfOverTime) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
facet_wrap(.~as.factor(Var3), nrow = 2) +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
#  scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#        high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Pairwise allocation probabilities - over time") +
theme(axis.text.x = element_blank() ,
axis.text.y = element_blank() ,
aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right",
axis.ticks = element_blank(),
axis.line.x =element_blank())
pairPlotOT
## overtime
dfOverTime  <- reshape2::melt(pairOverTime)
pairPlotOT <- ggplot(dfOverTime) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
facet_wrap(.~as.factor(Var3), nrow = 2) +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
#  scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#        high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Pairwise allocation probabilities - over time") +
theme(axis.text.x = element_blank() ,
axis.text.y = element_blank() ,
aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right",
axis.ticks = element_blank(),
axis.line  =element_blank())
pairPlotOT
## overtime
dfOverTime  <- reshape2::melt(pairOverTime)
pairPlotOT <- ggplot(dfOverTime) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
facet_wrap(.~as.factor(Var3), nrow = 2) +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
#  scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#        high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Markovian dependence - pairwise allocation probabilities") +
theme(axis.text.x = element_blank() ,
axis.text.y = element_blank() ,
aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right",
axis.ticks = element_blank(),
axis.line  =element_blank()) +
theme(legend.key.height = unit(2.5, "cm"))
pairPlotOT
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 12, height = 7)
## overtime
dfOverTime  <- reshape2::melt(pairOverTime)
pairPlotOT <- ggplot(dfOverTime) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
facet_wrap(.~as.factor(Var3), nrow = 2) +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
#  scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#        high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Markovian dependence - pairwise allocation probabilities") +
theme(axis.text.x = element_blank() ,
axis.text.y = element_blank() ,
aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right",
axis.ticks = element_blank(),
axis.line  =element_blank()) +
theme(legend.key.height = unit(2, "cm"))
pairPlotOT
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 12, height = 7)
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 12, height = 7.5)
View(dfVI)
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 12, height = 8)
View(distF1)
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 12, height = 9)
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 12, height = 12)
pairPlotOT
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 1, height = 12)
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 12, height = 7)
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 11, height = 7)
ggsave(pairPlotOT, filename = paste0(outDir, "pairWiseOverTime.pdf"),
width = 11, height = 5)
pairPlotM <- ggplot(dfMarginal) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
# scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#       high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Pairwise allocation probabilities\nmarginal over time") +
theme( aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right")
pairPlotM
ggsave(pairPlotM, filename = paste0(outDir, "pairWiseMarginal.pdf"),
width = 6, height = 6)
## overtime
dfOverTime  <- reshape2::melt(pairOverTime)
pairPlotOT <- ggplot(dfOverTime) +
geom_tile(aes(x = as.factor(Var1), y = as.factor(Var2),
fill = value), color = "white") +
facet_wrap(.~as.factor(Var3), nrow = 2) +
scale_fill_gradientn(colors= tim.colors(),limits = c(0, 1)) +
#  scale_fill_gradient2(low = "#e5f5f9",  mid = "#99d8c9",
#        high = "#2ca25f", midpoint = 0.5, limits = c(0, 1)) +
xlab('')+  ylab('') +
theme_classic(14)+
ggtitle("Markovian dependence - pairwise allocation probabilities") +
theme(axis.text.x = element_blank() ,
axis.text.y = element_blank() ,
aspect.ratio=0.9/1,
panel.border = element_rect(colour = "white", fill=NA, size=0.5),
legend.title = element_blank(),
legend.position="right",
axis.ticks = element_blank(),
axis.line  =element_blank()) +
theme(legend.key.height = unit(2, "cm"))
pairPlotOT
